# vim: ft=tmux

# prefix
unbind-key    C-b
set -g prefix C-s

# reload
unbind r
bind   r source-file ~/.tmux.conf \; display-message "tmux reloaded."

# kill
unbind K
bind   K confirm-before "kill-window"

set-option -g default-terminal "xterm"

set-option -g history-limit 100000
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
# set-option -g status-justify "centre"
set-option -g status-justify "left"
set-option -g status-left-length 80
set-option -g status-right-length 120
set -g pane-border-ascii on
setw -g automatic-rename off
setw -g mode-keys vi
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind p split-window -v -l10 -c "#{pane_current_path}"
bind 't' next-window
bind 'T' previous-window

set -g status-position top
set -g status-fg cyan
set -g status-bg black

setw -g window-status-current-fg black
setw -g window-status-current-bg cyan
setw -g window-status-current-attr bold#,underscore

set -g pane-active-border-fg black
set -g pane-active-border-bg cyan

if "test -d ~/.tmux.d/tmux-powerline" "set -g status-left '#(~/.tmux.d/tmux-powerline/powerline.sh left)'"
if "test -d ~/.tmux.d/tmux-powerline" "set -g status-right '#(~/.tmux.d/tmux-powerline/powerline.sh right)'"
if "test -d ~/.tmux.d/tmux-powerline" "setw -g window-status-current-format '#[fg=colour16, bg=colour27]⮀#I:#W#[fg=colour27, bg=colour16]⮀'"

# setup 'v' to begin selection as in Vim
bind v copy-mode
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

if "test -s ~/.tmux.conf.local" "source-file ~/.tmux.conf.local"
